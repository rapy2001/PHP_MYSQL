CREATE TRIGGER deleteRequests BEFORE INSERT ON friends FOR EACH ROW BEGIN
	DELETE FROM requests WHERE requests.to_id = NEW.user_id AND requests.from_id = NEW.friend_id;
END$$


insert into comments values(0,9,'DUMMY COMMENT',9,0);



create table notifications (
    notif_id int primary key auto_increment,
    owner_id int not null,
    scream_id int not null,
    comment_id int not null,
    like_id int not null,
    FOREIGN KEY(scream_id) REFERENCES screams(scream_id) ON DELETE CASCADE,
    FOREIGN KEY(comment_id) REFERENCES comments(comment_id) ON DELETE CASCADE,
    FOREIGN KEY(like_id) REFERENCES likes(like_id) ON DELETE CASCADE
	FOREIGN KEY(owner_id) REFERENCES users(user_id) ON DELETE CASCADE
);
insert into likes values(0,9,7,9);

alter table notifications add type int not null default 1;


alter table users add mode char(1) not null default 'P';


create table block (
    user_id int not null,
    block_id int not null,
    FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (block_id) REFERENCES users(user_id) ON DELETE CASCADE
);

create trigger delete_request_on_block before insert on block for each row begin
	DELETE FROM requests WHERE from_id = NEW.block_id AND to_id = NEW.user_id OR from_id = NEW.user_id AND to_id = NEW.block_id;
END

alter table notifications add created_at DATETIME not null default NOW();

alter table notifications add view char(1) not null default 'N';